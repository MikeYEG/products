program
    : printCommand
    | assignment
    ;

printCommand
    : CMD_PRINT assignable
    ;

assignment
    : assignee assignSymbol assignable
    ;

assignee
    : VAL_VARIABLE_PATTERN
    ;

assignable
    : logicalOperation
    | relationalOperation
    | arythmeticOperation
    | funcDefinition
    | listDefinition
    | mapDefinition
    | value
    ;

loop
    : relationalLoop
    | iterableLoop
    ;

relationalLoop
    : relationalOperation bracketCode
    ;

iterableLoop
    : iterableAssignment bracketCode
    ;

iterableAssignment
    : iterableAssignee assignSymbol iterable
    ;

iterableAssignee
    : VAL_VARIABLE_PATTERN COMMA VAL_VARIABLE_PATTERN
    | VAL_VARIABLE_PATTERN COMMA UNDERSCORE
    | VAL_VARIABLE_PATTERN
    ;

iterable
    : VAL_VARIABLE_PATTERN
    | mapDefinition
    | listDefinition
    ;

ifDefinition
    : logicalOperation bracketCode
    ;

funcDefinition
    : funcSignature bracketCode
    ;

funcSignature
    : funcParams funcParams?
    ;

funcParams
    : OPEN_PARENTHESIS funcParamContent* CLOSE_PARENTHESIS
    ;

funcParamContent
    : funcParamElement* funcParamEntry
    ;

funcParamElement
    : funcParamEntry COMMA
    ;

funcParamEntry
    : QUESTION_MARK? VAL_VARIABLE_PATTERN COLON complexType
    ;

bracketCode
    : OPEN_CURLED_BRACKET code* CLOSE_CURLED_BRACKET
    ;

code
    : assignment
    | ifDefinition
    | loop
    | RETURN
    | CONTINUE
    ;

mapDefinition
    : OPEN_CURLED_BRACKET mapDefinitionContent? CLOSE_CURLED_BRACKET
    ;

mapDefinitionContent
    : mapDefinitionContentElement* mapDefinitionContentEntry
    ;

mapDefinitionContentElement
    : mapDefinitionContentEntry COMMA
    ;

mapDefinitionContentEntry
    : VAL_VARIABLE_PATTERN COLON assignable
    ;

listDefinition
    : complexType listDefinitionInternal
    ;

listDefinitionInternal
    : OPEN_CURLED_BRACKET listDefinitionContent? CLOSE_CURLED_BRACKET
    ;

listDefinitionContent
    : listDefinitionContentElement* assignable
    ;

listDefinitionContentElement
    : assignable COMMA
    ;

complexType
    : listType
    | primitiveType
    ;

listType
    : primitiveType PIPE LIST_DIMENSION
    ;

primitiveType
    : BOOL
    | BYTE
    | INT_HEIGHT
    | INT_SIXTEEN
    | INT_THIRTY_TWO
    | INT_SIXTY_FOUR
    | UINT_HEIGHT
    | UINT_SIXTEEN
    | UINT_THIRTY_TWO
    | UINT_SIXTY_FOUR
    | FLOAT_THIRTY_TWO
    | FLOAT_SIXTY_FOUR
    | STRING
    ;

logicalOperation
    : relationalOperation logicalSymbol logicalOperationOperand
    | logicalOperationOperand logicalSymbol relationalOperation
    | logicalOperationOperand logicalSymbol logicalOperationOperand
    | OPEN_PARENTHESIS logicalOperation CLOSE_PARENTHESIS
    ;

logicalOperationOperand
    : relationalOperation
    | logicalOperation
    | OPEN_PARENTHESIS logicalOperationOperand CLOSE_PARENTHESIS
    ;

relationalOperation
    : relationalOperationDecimal
    | relationalOperationInt
    | OPEN_PARENTHESIS relationalOperation CLOSE_PARENTHESIS
    ;

relationalOperationDecimal
    : valueDecimalComplex relationalSymbol valueDecimalComplex
    ;

relationalOperationInt
    : valueIntComplex relationalSymbol valueIntComplex
    ;

arythmeticOperation
    : arythmeticOperationDecimal
    | arythmeticOperationInt
    ;

arythmeticOperationDecimal
    : valueDecimal arythmeticSymbol valueDecimalComplex
    | arythmeticOperationDecimal arythmeticSymbol valueDecimalComplex
    | OPEN_PARENTHESIS arythmeticOperationDecimal CLOSE_PARENTHESIS
    ;

valueDecimalComplex
    : valueDecimal
    | arythmeticOperationDecimal
    ;

arythmeticOperationInt
    : valueInt arythmeticSymbol valueIntComplex
    | arythmeticOperationInt arythmeticSymbol valueIntComplex
    | OPEN_PARENTHESIS arythmeticOperationInt CLOSE_PARENTHESIS
    ;

valueIntComplex
    : valueInt
    | arythmeticOperationInt
    ;

arythmeticSymbol
    : ARY_ADD
    | ARY_SUB
    | ARY_MUL
    | ARY_DIV
    | ARY_MOD
    ;

relationalSymbol
    : REL_LESS_THAN
    | REL_LESS_THAN_OR_EQUAL
    | REL_BIGGER_THAN
    | REL_BIGGER_THAN_OR_EQUAL
    | REL_EQUAL
    | REL_NOT_EQUAL
    ;

logicalSymbol
    : LOG_AND
    | LOG_OR
    ;

assignSymbol
    : FIRST_ASSIGN
    | ASSIGN
    ;

valueDecimal
    : VAL_VARIABLE_PATTERN
    | decimalValue
    ;

valueInt
    : VAL_VARIABLE_PATTERN
    | VAL_INT
    ;

value
    : VAL_VARIABLE_PATTERN
    | VAL_INT
    | decimalValue
    | stringValue
    ;

decimalValue
    : VAL_INT DOT VAL_INT
    ;

stringValue
    : QUOTATION_MARK EVERYTHING_EXCEPT_QUOTATION QUOTATION_MARK
    ;
