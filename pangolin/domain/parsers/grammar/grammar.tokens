program
    : testable
    | languageApplication
    ;

testable
    : executable
    | languageDefinition
    ;

executable
    : application
    | script
    ;

script
    : SCRIPT COLON scriptValue+ DOT
    ;

scriptValue
    : SCRIPT_NAME COLON NAME_PATTERN DOT
    | SCRIPT_VERSION COLON VERSION_PATTERN DOT
    | SCRIPT_SCRIPT COLON relativePath DOT
    | SCRIPT_LANGUAGE COLON relativePath DOT
    | SCRIPT_OUTPUT COLON VARIABLE_PATTERN DOT
    | SCRIPT_TESTS COLON scriptTests DOT
    ;

scriptTests
    : scriptTest scriptTestWithComma*
    ;

scriptTestWithComma
    : COMMA scriptTest
    ;

scriptTest
    : TEST_NAME_PATTERN COLON relativePath
    ;

command
    : languageCommand
    | scriptCommand
    | headCommand
    | mainCommand
    | testCommand
    | labelCommand
    ;

languageCommand
    : LANGUAGE VARIABLE_PATTERN COLON languageValue+ DOT
    ;

scriptCommand
    : SCRIPT VARIABLE_PATTERN COLON scriptValue+ DOT
    ;

headCommand
    : HEAD VARIABLE_PATTERN COLON headValue+ DOT
    ;

mainCommand
    : MAIN VARIABLE_PATTERN COLON mainCommandInstruction+ DOT
    ;

mainCommandInstruction
    : scopesWithArrow? instruction
    ;

testCommand
    : TEST VARIABLE_PATTERN COMMA TEST_NAME_PATTERN COLON testCommandInstruction+ DOT
    ;

testCommandInstruction
    : scopesWithArrow? testInstruction
    ;

labelCommand
    : LABEL VARIABLE_PATTERN COMMA LABEL_PATTERN COLON labelCommandInstruction+ DOT
    ;

labelCommandInstruction
    : scopesWithArrow? labelInstruction
    ;

scopesWithArrow
    : scopes ARROW
    ;

scopes
    : scope+
    ;

scope
    : STAR
    | PLUS
    ;

languageApplication
    : headSection languageLabelSection languageMainSection languageTestSection?
    ;

languageMainSection
    : MAIN COLON languageInstruction+ DOT
    ;

languageTestSection
    : TESTS COLON languageTestDeclaration+ DOT
    ;

languageTestDeclaration
    : TEST_NAME_PATTERN COLON languageTestInstruction+ DOT
    ;

languageTestInstruction
    : languageInstructionCommon
    | testInstruction
    | INTERPRET DOT
    ;

languageLabelSection
    : LABELS COLON languageLabelDeclaration+ DOT
    ;

languageLabelDeclaration
    : LABEL_PATTERN COLON languageLabelInstruction+ DOT
    ;

languageLabelInstruction
    : labelInstruction
    | languageInstruction
    | token DOT
    ;

languageInstruction
    : languageInstructionCommon
    | command
    ;

languageInstructionCommon
    : instruction
    | match DOT
    ;

token
    : CODE_MATCH COLON codeMatch
    | CODE COLON tokenSection
    ;

codeMatch
    : VARIABLE_PATTERN COMMA VARIABLE_PATTERN COMMA callPatterns
    ;

tokenSection
    : specificTokenCodeWithAmount
    | specificTokenCode
    | VARIABLE_PATTERN
    ;

specificTokenCodeWithAmount
    : VARIABLE_PATTERN COMMA VARIABLE_PATTERN COMMA callPattern
    ;

specificTokenCode
    : VARIABLE_PATTERN COMMA callPattern
    ;

callPatterns
    : callPattern pipeCallPattern*
    ;

pipeCallPattern
    : PIPE callPattern
    ;

callPattern
    : COMMERCIAL_A patternOrRule
    ;

patternOrRule
    : RULE_PATTERN
    | PATTERN_PATTERN
    ;

match
    : MATCH COLON VARIABLE_PATTERN matchPattern?
    ;

matchPattern
    : COMMA DOLLAR_SIGN PATTERN_PATTERN
    ;

languageDefinition
    : LANGUAGE COLON languageValue+ DOT
    ;

languageValue
    : LANG_ROOT COLON PATTERN_PATTERN DOT
    | LANG_TOKENS COLON relativePath DOT
    | LANG_CHANNELS COLON relativePath DOT
    | LANG_RULES COLON relativePath DOT
    | LANG_LOGIC COLON relativePath DOT
    | IN COLON VARIABLE_PATTERN DOT
    | EXTENDS COLON singleExtend+ DOT
    | LANG_PATTERN_MATCHES COLON patternMatch+ DOT
    ;

singleExtend
    : relativePath DOT
    ;

patternMatch
    : PATTERN_PATTERN COLON patternLabels DOT
    ;

patternLabels
    : patternLabelEnter patternLabelExit
    | patternLabelEnter? patternLabelExit
    | patternLabelEnter patternLabelExit?
    ;

patternLabelEnter
    : LABEL_PATTERN
    ;

patternLabelExit
    : PIPE LABEL_PATTERN
    ;

relativePaths
    : relativePath relativePathWithComma*
    ;

relativePathWithComma
    : COMMA relativePath
    ;

relativePath
    : QUOTATION folderSection+ QUOTATION
    ;

folderSection
    : folderName SLASH
    | FILE_PATTERN
    ;

folderName
    : DOT
    | DOT DOT
    | FILE_PATTERN
    ;

application
    : headSection labelSection? mainSection testSection?
    ;

testSection
    : TESTS COLON testDeclaration+ DOT
    ;

testDeclaration
    : TEST_NAME_PATTERN COLON testInstruction+ DOT
    ;

testInstruction
    : instruction
    | assert DOT
    | readFile DOT
    ;

assert
    : ASSERT COLON INT
    | ASSERT_IF COLON VARIABLE_PATTERN COMMA INT
    ;

readFile
    : READ COLON VARIABLE_PATTERN COMMA relativePath
    ;

headSection
    : HEAD COLON headValue+ DOT
    ;

headValue
    : NAME COLON NAME_PATTERN DOT
    | VERSION COLON VERSION_PATTERN DOT
    | IMPORTS COLON importSingle+ DOT
    ;

importSingle
    : NAME_PATTERN COLON relativePath DOT
    ;

labelSection
    : LABELS COLON labelDeclaration+ DOT
    ;

labelDeclaration
    : LABEL_PATTERN COLON labelInstruction+ DOT
    ;

labelInstruction
    : instruction
    | RET DOT
    ;

mainSection
    : MAIN COLON instruction+ DOT
    ;

instruction
    : variable DOT
    | operation DOT
    | print DOT
    | stackFrame DOT
    | jump DOT
    | exit DOT
    | call DOT
    | switch DOT
    | save DOT
    | registry DOT
    ;

registry
    : register
    | unregister
    | fetchRegistry
    ;

fetchRegistry
    : FETCH_REGISTRY COLON VARIABLE_PATTERN COMMA VARIABLE_PATTERN COMMA intPointer
    | FETCH_REGISTRY COLON VARIABLE_PATTERN COMMA VARIABLE_PATTERN
    ;

unregister
    : UNREGISTER COLON VARIABLE_PATTERN
    ;

register
    : REGISTER COLON VARIABLE_PATTERN COMMA intPointer
    | REGISTER COLON VARIABLE_PATTERN
    ;

variable
    : declaration
    | assignment
    | concatenation
    | DELETE COLON VARIABLE_PATTERN
    ;

concatenation
    : CONCAT COLON standardOperation
    ;

declaration
    : DECLARE COLON VARIABLE_PATTERN PIPE type
    ;

assignment
    : ASSIGN COLON VARIABLE_PATTERN COMMA valueRepresentation
    ;

valueRepresentation
    : value
    | VARIABLE_PATTERN
    ;

value
    : numericValue
    | boolValue
    | stringValue
    | NIL
    ;

numericValue
    : MINUS? INT
    | MINUS? floatValue
    ;

boolValue
    : TRUE
    | FALSE
    ;

floatValue
    : INT DOT INT
    ;

stringValue
    : QUOTATION EVERYTHING_EXCEPT_QUOTATION QUOTATION
    ;

type
    : BOOL
    | INT_HEIGHT
    | INT_SIXTEEN
    | INT_THIRTY_TWO
    | INT_SIXTY_FOUR
    | FLOAT_THIRTY_TWO
    | FLOAT_SIXTY_FOUR
    | UINT_HEIGHT
    | UINT_SIXTEEN
    | UINT_THIRTY_TWO
    | UINT_SIXTY_FOUR
    | STRING
    | STACKFRAME
    ;

operation
    : arythmetic
    | relational
    | logical
    ;

arythmetic
    : ADD COLON standardOperation
    | SUB COLON standardOperation
    | MUL COLON standardOperation
    | DIV COLON remainingOperation
    ;

relational
    : LESS_THAN COLON standardOperation
    | EQUAL_INS COLON standardOperation
    | NOT_EQUAL_INS COLON standardOperation
    ;

logical
    : AND COLON standardOperation
    | OR COLON standardOperation
    ;

standardOperation
    : VARIABLE_PATTERN COMMA VARIABLE_PATTERN COMMA VARIABLE_PATTERN
    ;

remainingOperation
    : VARIABLE_PATTERN COMMA VARIABLE_PATTERN COMMA VARIABLE_PATTERN COMMA VARIABLE_PATTERN
    ;

print
    : PRINT COLON valueRepresentation
    ;

jump
    : JUMP COLON PERCENT LABEL_PATTERN
    | JUMP_IF COLON VARIABLE_PATTERN COMMA PERCENT LABEL_PATTERN
    ;

exit
    : EXIT
    | EXIT_IF COLON VARIABLE_PATTERN
    ;

call
    : CALL COLON NAME_PATTERN
    | CALL_IF COLON VARIABLE_PATTERN COMMA NAME_PATTERN
    ;

save
    : SAVE COLON VARIABLE_PATTERN COMMA VARIABLE_PATTERN
    | SAVE COLON VARIABLE_PATTERN
    ;

switch
    : SWITCH COLON VARIABLE_PATTERN
    ;

stackFrame
    : PUSH
    | POP
    | skip
    | index
    ;

skip
    : SKIP COLON intPointer
    ;

index
    : INDEX COLON VARIABLE_PATTERN
    ;

intPointer
    : INT
    | VARIABLE_PATTERN
    ;
